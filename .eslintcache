[{"C:\\React\\english-patient\\src\\index.js":"1","C:\\React\\english-patient\\src\\App.js":"2","C:\\React\\english-patient\\src\\components\\UserInfo.jsx":"3","C:\\React\\english-patient\\src\\components\\templates\\Input.jsx":"4","C:\\React\\english-patient\\src\\components\\templates\\Button.jsx":"5","C:\\React\\english-patient\\src\\components\\LoginPage.jsx":"6","C:\\React\\english-patient\\src\\components\\forms\\SignInForm.jsx":"7","C:\\React\\english-patient\\src\\components\\forms\\SignUpForm.jsx":"8","C:\\React\\english-patient\\src\\components\\forms\\ForgotForm.jsx":"9","C:\\React\\english-patient\\src\\components\\templates\\ButtonWithIcon.jsx":"10","C:\\React\\english-patient\\src\\redux\\store.js":"11","C:\\React\\english-patient\\src\\redux\\user-reducer.js":"12","C:\\React\\english-patient\\src\\api\\api.js":"13","C:\\React\\english-patient\\src\\redux\\auth-reducer.js":"14"},{"size":366,"mtime":1612257857356,"results":"15","hashOfConfig":"16"},{"size":1319,"mtime":1612261142951,"results":"17","hashOfConfig":"16"},{"size":1339,"mtime":1612325423183,"results":"18","hashOfConfig":"16"},{"size":508,"mtime":1612250726645,"results":"19","hashOfConfig":"16"},{"size":789,"mtime":1612254146458,"results":"20","hashOfConfig":"16"},{"size":1228,"mtime":1612424352602,"results":"21","hashOfConfig":"16"},{"size":4216,"mtime":1612265122205,"results":"22","hashOfConfig":"16"},{"size":3479,"mtime":1612264991426,"results":"23","hashOfConfig":"16"},{"size":1602,"mtime":1612264889336,"results":"24","hashOfConfig":"16"},{"size":878,"mtime":1612256368899,"results":"25","hashOfConfig":"16"},{"size":389,"mtime":1612258965548,"results":"26","hashOfConfig":"16"},{"size":1153,"mtime":1612325368941,"results":"27","hashOfConfig":"16"},{"size":431,"mtime":1612263040936,"results":"28","hashOfConfig":"16"},{"size":2127,"mtime":1612264933978,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"rnetxu",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},"C:\\React\\english-patient\\src\\index.js",[],["60","61"],"C:\\React\\english-patient\\src\\App.js",[],"C:\\React\\english-patient\\src\\components\\UserInfo.jsx",[],"C:\\React\\english-patient\\src\\components\\templates\\Input.jsx",[],"C:\\React\\english-patient\\src\\components\\templates\\Button.jsx",[],"C:\\React\\english-patient\\src\\components\\LoginPage.jsx",[],"C:\\React\\english-patient\\src\\components\\forms\\SignInForm.jsx",[],"C:\\React\\english-patient\\src\\components\\forms\\SignUpForm.jsx",[],"C:\\React\\english-patient\\src\\components\\forms\\ForgotForm.jsx",[],"C:\\React\\english-patient\\src\\components\\templates\\ButtonWithIcon.jsx",[],"C:\\React\\english-patient\\src\\redux\\store.js",[],"C:\\React\\english-patient\\src\\redux\\user-reducer.js",[],"C:\\React\\english-patient\\src\\api\\api.js",[],"C:\\React\\english-patient\\src\\redux\\auth-reducer.js",["62"],"import { authAPI, instance } from \"../api/api\";\r\nimport { getUser } from \"./user-reducer\";\r\n\r\nconst SET_TOKEN = \"auth/SET_TOKEN\"\r\nconst SET_FETCHING = \"auth/SET_FETCHING\"\r\nconst SET_ERROR = \"auth/SET_ERROR\"\r\n\r\nlet initialState = {\r\n    token: null,\r\n    isFetching: false,\r\n    errorMessage: \"\"\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case SET_TOKEN: {\r\n            return {\r\n                ...state,\r\n                token: action.token\r\n            }\r\n        }\r\n        case SET_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case SET_ERROR: {\r\n            return {\r\n                ...state,\r\n                errorMessage: action.errorMessage\r\n            }\r\n        }\r\n        default:\r\n            return state; \r\n    }\r\n}\r\n\r\nexport const setToken = token => {\r\n    return {\r\n        type: SET_TOKEN,\r\n        token\r\n    }\r\n}\r\n\r\nexport const setFetching = isFetching => {\r\n    return {\r\n        type: SET_FETCHING,\r\n        isFetching\r\n    }\r\n}\r\n\r\nexport const setError = errorMessage => {\r\n    return {\r\n        type: SET_ERROR,\r\n        errorMessage\r\n    }\r\n}\r\n\r\nexport const login = (email, password) => {\r\n    return async (dispatch) => {\r\n        try{\r\n            dispatch(setFetching(true))\r\n            let response = await authAPI.login(email, password);\r\n            if(response.data.error){\r\n                dispatch(setError(response.data.error.message))\r\n                dispatch(setFetching(false))\r\n                return false;\r\n            }else{\r\n                instance.interceptors.request.use(req => {\r\n                    req.headers.Authorization = response.data.token;\r\n                    return req;\r\n                })\r\n                dispatch(setToken(response.data.token))\r\n                dispatch(getUser(response.data.token))\r\n                dispatch(setFetching(false))\r\n                return true;\r\n            }\r\n        }catch(e){\r\n            dispatch(setError(e))\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default authReducer;",{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":3,"column":13,"nodeType":"69","messageId":"70","endLine":3,"endColumn":18},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]